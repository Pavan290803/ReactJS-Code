[{"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\index.js":"1","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\reportWebVitals.js":"2","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\config\\routes\\index.js":"3","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\pages\\businessProfile\\index.js":"4","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\pages\\profile\\index.js":"5","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\loading.js":"6","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\helper\\theme\\index.js":"7","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\index.js":"8","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\businessProfile\\index.js":"9","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\theme2\\theme2WithBg.js":"10","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\theme1\\theme1WithBg.js":"11","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\businessProfile\\theme1\\theme1WithBg.js":"12","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\theme2\\index.js":"13","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\theme1\\index.js":"14","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\index.js":"15","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\index.js":"16","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\businessProfile\\theme1\\index.js":"17","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\businessProfile\\theme2\\index.js":"18","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\config\\api_urls\\api_urls.js":"19","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\shared\\svg\\index.js":"20","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\Bio\\index.js":"21","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\SocialLink\\index.js":"22","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\TopSocialLinks\\index.js":"23","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\UserDetails\\index.js":"24","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\UserDetails\\index.js":"25","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\Bio\\index.js":"26","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\Player\\index.js":"27","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\SocialLink\\index.js":"28","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\Player\\index.js":"29","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\SocialAndGetInTouch\\index.js":"30","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\shared\\footer\\index.js":"31","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\TopSocial\\index.js":"32","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\shared\\VideoPlayer\\index.js":"33","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\SocialAndGetInTouch\\GetInTouch\\index.js":"34"},{"size":588,"mtime":1658585134000,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1658585134000,"results":"37","hashOfConfig":"36"},{"size":477,"mtime":1658585136000,"results":"38","hashOfConfig":"36"},{"size":1614,"mtime":1658585136000,"results":"39","hashOfConfig":"36"},{"size":1506,"mtime":1658585136000,"results":"40","hashOfConfig":"36"},{"size":403,"mtime":1658585136000,"results":"41","hashOfConfig":"36"},{"size":839,"mtime":1658856472779,"results":"42","hashOfConfig":"36"},{"size":1345,"mtime":1658585136000,"results":"43","hashOfConfig":"36"},{"size":447,"mtime":1658585136000,"results":"44","hashOfConfig":"36"},{"size":13201,"mtime":1658585136000,"results":"45","hashOfConfig":"36"},{"size":7950,"mtime":1658585136000,"results":"46","hashOfConfig":"36"},{"size":7832,"mtime":1658585136000,"results":"47","hashOfConfig":"36"},{"size":10120,"mtime":1658585136000,"results":"48","hashOfConfig":"36"},{"size":7382,"mtime":1658585136000,"results":"49","hashOfConfig":"36"},{"size":1170,"mtime":1658585136000,"results":"50","hashOfConfig":"36"},{"size":1311,"mtime":1658585136000,"results":"51","hashOfConfig":"36"},{"size":7072,"mtime":1658585136000,"results":"52","hashOfConfig":"36"},{"size":22506,"mtime":1658585136000,"results":"53","hashOfConfig":"36"},{"size":251,"mtime":1658585136000,"results":"54","hashOfConfig":"36"},{"size":44554,"mtime":1658585136000,"results":"55","hashOfConfig":"36"},{"size":631,"mtime":1658585136000,"results":"56","hashOfConfig":"36"},{"size":1604,"mtime":1658585136000,"results":"57","hashOfConfig":"36"},{"size":1780,"mtime":1658585136000,"results":"58","hashOfConfig":"36"},{"size":983,"mtime":1658585136000,"results":"59","hashOfConfig":"36"},{"size":778,"mtime":1658585136000,"results":"60","hashOfConfig":"36"},{"size":711,"mtime":1658585136000,"results":"61","hashOfConfig":"36"},{"size":418,"mtime":1658585136000,"results":"62","hashOfConfig":"36"},{"size":1400,"mtime":1658585136000,"results":"63","hashOfConfig":"36"},{"size":886,"mtime":1658585136000,"results":"64","hashOfConfig":"36"},{"size":813,"mtime":1658585136000,"results":"65","hashOfConfig":"36"},{"size":704,"mtime":1658585136000,"results":"66","hashOfConfig":"36"},{"size":1498,"mtime":1658585136000,"results":"67","hashOfConfig":"36"},{"size":2521,"mtime":1658585136000,"results":"68","hashOfConfig":"36"},{"size":481,"mtime":1658585136000,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b45kki",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\reportWebVitals.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\config\\routes\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\pages\\businessProfile\\index.js",["183","184"],[],"import React, { useEffect, useState } from 'react';\nimport BusinessTheme from '../../components/businessProfile';\nimport {useParams} from \"react-router-dom\";\nimport axios from 'axios';\nimport c from './profile.module.scss';\nimport classNames from 'classnames';\nimport {parseToJson, GetSortOrder} from '../../helper/theme';\nimport Loading from '../../components/loading';\n\nconst BusinessProfile = () => {\n    const { id } = useParams();\n    const [theme, setTheme] = useState(\"1\");\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState({});\n    \n    useEffect(()=>{\n        getProfileData();\n    }, [])\n\n    const getProfileData = () =>{\n        axios.get(`https://orehcihaoc.execute-api.ap-south-1.amazonaws.com/v1/${id}`)\n        .then((res)=>{\n            const Response = res;\n            const Links = JSON.parse(Response?.data?.BusinessMode.Links);\n            Links.sort(GetSortOrder(\"Order\"));\n            Response.data.SocialLinks = Links;\n            console.log(Response.data.BusinessMode)\n            setData(Response.data);\n            setTheme(Response?.data?.Theme)\n            setLoading(false);\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    if(!loading){\n        return(         \n            <BusinessTheme id={id} data={data} theme={theme} />\n        )\n    }\n    else{\n        return(\n            <div className={classNames(c.loader)}>\n                <div className={classNames(\"align-center\")}>\n                    <Loading />\n                </div>\n            </div>\n        )\n    }\n}   \nexport default BusinessProfile;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\pages\\profile\\index.js",["185"],[],"import React, { useEffect, useState } from 'react';\nimport Theme from '../../components/profile';\nimport {useParams} from \"react-router-dom\";\nimport axios from 'axios';\nimport c from './profile.module.scss';\nimport classNames from 'classnames';\nimport {parseToJson, GetSortOrder} from '../../helper/theme';\nimport Loading from '../../components/loading';\n\nconst Profile = () => {\n    const { id } = useParams();\n    const [theme, setTheme] = useState(\"Dark\");\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState({});\n    \n    useEffect(()=>{\n        getProfileData();\n    }, [])\n\n    const getProfileData = () =>{\n        axios.get(`https://orehcihaoc.execute-api.ap-south-1.amazonaws.com/v1/${id}`)\n        .then((res)=>{\n            const Response = res;\n            const Links = parseToJson(Response?.data);\n            Links.sort(GetSortOrder(\"Order\"));\n            Response.data.SocialLinks = Links;\n            setData(Response.data);\n            setTheme(Response?.data?.Theme)\n            setLoading(false);\n        })\n        .catch((err)=>{\n            console.log(err);\n        })\n    }\n\n    if(!loading){\n        return(         \n            <Theme id={id} data={data} theme={theme} />\n        )\n    }\n    else{\n        return(\n            <div className={classNames(c.loader)}>\n                <div className={classNames(\"align-center\")}>\n                    <Loading />\n                </div>\n            </div>\n        )\n    }\n}   \nexport default Profile;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\loading.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\helper\\theme\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\businessProfile\\index.js",["186","187","188","189","190"],[],"import React from 'react';\nimport Theme1 from './theme1';\nimport Theme1Bg from './theme1/theme1WithBg';\nimport Theme2 from './theme2';\nimport Theme2Bg from './theme2';\n\nconst BusinessTheme = ({theme, id, data, iurl, ...props}) => {\n    if(theme == \"Light\" || theme == \"White\") {\n        return(<Theme1 data={data} id={id}/>)\n    } \n    else if (theme == \"Dark\") {\n        return(<Theme2 data={data} id={id}/>)\n    }\n}\nexport default BusinessTheme;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\theme2\\theme2WithBg.js",["191","192","193","194","195","196","197","198","199","200"],[],"import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport c from './theme2bg.module.scss';\nimport {AppIconDark, LocationPinIcon, YoutubeColoredIcon} from '../../shared/svg';\nimport CardMedia from '@mui/material/CardMedia';\nimport {videoURL} from '../../../helper/theme'\nimport {API_URLS} from \"../../../config/api_urls/api_urls\";\nimport { Carousel } from 'react-responsive-carousel';\n\nconst Theme2Bg = ({id, data, ...props}) => {\n    const [play, setPlay] = useState(false); \n    const [url, setUrl] = useState(\"https://media.istockphoto.com/photos/dotted-grid-paper-background-texture-seamless-repeat-pattern-picture-id1320330053?b=1&k=20&m=1320330053&s=170667a&w=0&h=XisfN35UnuxAVP_sjq3ujbFDyWPurSfSTYd-Ll09Ncc=\")\n    var bgImgs = [\"https://images.unsplash.com/photo-1649401691853-6ecfa00f044e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwzNXx8fGVufDB8fHx8&auto=format&fit=crop&w=500&q=60\",\"https://images.unsplash.com/photo-1444090542259-0af8fa96557e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\",\"https://images.unsplash.com/photo-1596226833102-76b6247dfc2e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=871&q=80\"];\n\n    const videoId = (data.FeaturedVideo ? data.FeaturedVideo.split(\"?v=\")[1] : \"testtest\") //data.FeaturedVideo.split(\"?v=\")[1];\n    const thumb = \"https://img.youtube.com/vi/\" + videoId + \"/maxresdefault.jpg\"\n    useEffect(() => {\n        if (data.DirectLink == true) {\n            const rurl = \"https://\" + data.SocialLinks[0].URL;\n            window.location.href = rurl//data.SocialLinks[0].URL;\n        }\n      }, []);\n\n    function getBg() {\n        if (\"BackgroundImage\" in data) {\n            return data?.BackgroundImage;\n        } else {\n            return \"none\";\n        }\n      }\n      \n    if (data.DirectLink == true) { \n        return null\n    } else {\n        return(\n            <div style={{ backgroundImage: `url(${getBg()})` }}  className={classNames(c.theme2)}> \n                <div>\n                    <div className={classNames(c.boxImage)}>\n                        {data.BusinessMode ? (\n                            <Carousel\n                                autoPlay={true}\n                                interval={5000}\n                                infiniteLoop={true}\n                                showArrows={false} showStatus={false}\n                                showIndicators={false} showThumbs={false}>\n                                    {/* {bgImgs.map((element) => (\n                                        <img className={classNames(c.profileBgImage)} src={data?.PersonalInfo?.CoverImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.CoverImageLocation}` : element} alt=\"bg-img\"/>\n                                    ))}   */}\n                                {JSON.parse(data.BusinessMode.HoveringImages).map(element => (\n                                    <img className={classNames(c.profileBgImage)} src={data?.PersonalInfo?.CoverImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.CoverImageLocation}` : element.URL} alt=\"bg-img\"/>\n                                ))}\n                            </Carousel>\n                        ) : (\n                            data?.PersonalInfo?.CoverImageLocation ?\n                            <div className={classNames(c.profileBgImage)} ></div>\n                            :\n                            <div className={classNames(c.profileBgImage)}></div>\n                        )\n                        }\n                        \n                        {/* {\n                            data?.PersonalInfo?.CoverImageLocation ?\n                            <div className={classNames(c.profileBgImage)} ></div>\n                            :\n                            <div className={classNames(c.profileBgImage)}></div>\n                        } */}\n                    </div>\n                    <center>\n                        <div className={classNames(c.profileImageBorder, \"rounded-circle\")}>\n                            <img className={classNames(c.profileImage, \"rounded-circle\")} src={data?.PersonalInfo?.ImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}` : require('../../../assets/images/Profile.png')} alt=\"profile\"/>\n                        </div>\n\n                        <div className={classNames(c.profileName, \"text-center\")}>{data?.PersonalInfo.Name || \"Update your name\"}</div>\n                        <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Work || \"Update your work\"}</div>\n                        <div className={classNames(c.cityText, \"text-center\")}><LocationPinIcon/>{data?.PersonalInfo?.Location || \"Update your location\"}</div>\n                    </center>\n\n                    <div className={classNames(c.boxContainer)}>\n                        <div className={classNames(c.boxTextContainer)}>\n                            <div className={classNames(c.text)}>\n                                {data?.PersonalInfo?.Bio || \"Update your BIO\"}\n                            </div>\n                        </div>\n\n                        <div className={classNames(\"my-5\")}>\n                        <div className={classNames(c.sBox)}>\n                        {(data?.SocialLinks && Array.isArray(data.SocialLinks) && ((data.SocialLinks).length > 0) ) &&\n                                data?.SocialLinks.slice(0,3).map((item) => {\n                                    if(item.isActive == true) {\n                                        return(\n                                            <div className={classNames(c.sBoxChild)}>\n                                                <a href={`https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>  \n                                                    <div className={classNames(c.socialIcons)}>\n                                                        <div className={classNames(c.socialIconsOuter)}> \n                                                            <div className={classNames(c.socialIcon)}>\n                                                                <img className={classNames(c.socialImage)} src={`${API_URLS.blackAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        )\n                                    }\n                                    else {\n                                        return null\n                                    }\n                                })}\n                        </div>\n                    </div>\n                        {\n                            data.FeaturedVideo ? (\n                            <div>\n                            {\n                                play ?\n                                    <CardMedia component=\"iframe\" allow=\"autoplay\" allowFullScreen=\"allowfullscreen\" className={classNames(c.videoPlayer)} \n                                        src={`${videoURL(data?.FeaturedVideo)}?autoplay=1&mute=1`}\n                                    />\n                                :\n                                    <div className={classNames(c.videoOuter)} onClick={()=>setPlay(true)}>\n                                        <div className={classNames(c.video)} style={{backgroundImage: `url(${thumb})`}}>\n                                            {\n                                                data?.PersonalInfo?.ImageLocation ? \n                                                <div className={classNames(c.icon,\"bg-white\")} style={{backgroundImage: 'url('+ `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}`+')'}}></div>\n                                                :\n                                                <div className={classNames(c.icon,\"bg-white\" )} style={{backgroundImage: 'url('+ require(\"../../../assets/images/Profile.png\") +')'}}></div>\n                                            }\n                                            <div className={classNames(c.text)}>{data?.PersonalInfo.Name || \"Video Title\"}</div>\n                                            <div className={classNames(c.playerIcon)}>\n                                                <YoutubeColoredIcon/>\n                                            </div>                    \n                                        </div>\n                                    </div>\n                            }\n                            </div>\n                            ) : (null)\n                        }\n\n                        {\n                            (data?.SocialLinks && Array.isArray(data.SocialLinks) && ((data.SocialLinks).length > 3) ) &&\n                            <div className=\"row justify-content-center mt-3\">\n                                {   \n                                    data.SocialLinks.filter(element => element.Name === 'Email' || element.Name === 'Call' || element.Name === 'Gmail' | element.Name === 'Facebook').map((item)=>{\n                                        if (item.isActive === true) {\n                                            return (\n                                                <div key={item?.Name} className={classNames(c.cursorPointer,\"col-auto mt-4\")}>\n                                                    <a href={`${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>  \n                                                        <div className={classNames(c.circleIcon)}>\n                                                            <div className={classNames(c.centerIcon)}>\n                                                                <img className={classNames(c.socialImage)} src={`${API_URLS.blackAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                            </div>\n                                                        </div>\n                                                        <div className={classNames(c.circleIconText, \"text-white mt-2 text-center\")}>{item?.Name}</div>\n                                                    </a>    \n                                                </div>\n                                            )\n                                        } \n                                        else {\n                                            return (null)\n                                        }\n                                    })\n                                }\n                                {   \n                                    data.SocialLinks.filter(element => element.Name !== 'Email' && element.Name !== 'Call' && element.Name !== 'Gmail' && element.Name !== 'Facebook').slice(3).map((item)=>{\n                                        if (item.isActive === true) {\n                                            return (\n                                                <div key={item?.Name} className={classNames(c.cursorPointer,\"col-auto mt-4\")}>\n                                                    <a href={`https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>  \n                                                        <div className={classNames(c.circleIcon)}>\n                                                            <div className={classNames(c.centerIcon)}>\n                                                                <img className={classNames(c.socialImage)} src={`${API_URLS.blackAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                            </div>\n                                                        </div>\n                                                        <div className={classNames(c.circleIconText, \"text-white mt-2 text-center\")}>{item?.Name}</div>\n                                                    </a>    \n                                                </div>\n                                            )\n                                        } \n                                        else {\n                                            return (null)\n                                        }\n                                    })\n                                }\n                            </div>\n                        }\n                        <div className={classNames(c.bottomApp)}>\n                            <a href='https://caard.club' target='_blank'>\n                                <AppIconDark/>\n                            </a>\n                            <center>\n                                <div target='_blank' href='https://caard.club' style={{ textDecoration:'none'}} className={classNames(c.text)}>Powered by Caard</div>\n                            </center>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Theme2Bg;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\theme1\\theme1WithBg.js",["201","202","203","204","205","206","207"],[],"import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport c from './theme1bg.module.scss';\nimport { AppIconDark, YoutubeIcon } from '../../shared/svg';\nimport CardMedia from '@mui/material/CardMedia';\nimport {videoURL} from '../../../helper/theme';\nimport {API_URLS} from \"../../../config/api_urls/api_urls\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nconst Theme1Bg = ({id, data, ...props}) => {\n    const [play, setPlay] = useState(false)\n    \n    const videoId = (data.FeaturedVideo ? data.FeaturedVideo.split(\"?v=\")[1] : \"testtest\") //data.FeaturedVideo.split(\"?v=\")[1];\n    const thumb = \"https://img.youtube.com/vi/\" + videoId + \"/maxresdefault.jpg\"\n    var bgImgs = [\"https://images.unsplash.com/photo-1649401691853-6ecfa00f044e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwzNXx8fGVufDB8fHx8&auto=format&fit=crop&w=500&q=60\",\"https://images.unsplash.com/photo-1444090542259-0af8fa96557e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\",\"https://images.unsplash.com/photo-1596226833102-76b6247dfc2e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=871&q=80\"];\n\n    useEffect(() => {\n        if (data.DirectLink == true) {\n            const rurl = \"https://\" + data.SocialLinks[0].URL;\n            window.location.href = rurl\n        }\n      }, []);\n\n      function getBg() {\n        if (\"BackgroundImage\" in data) {\n            return data?.BackgroundImage;\n        } else {\n            return \"none\";\n        }\n      }\n    \n    if(data.DirectLink == true) {\n        return null\n    } else {\n        return(\n            <div style={{ backgroundImage: `url(${getBg()})` }} className={classNames(c.theme1)}>\n               <div>\n                    <div className={classNames(c.profileBgContainer)}>\n                        \n                    </div>\n                    <center>\n                        <img className={classNames(c.profileImage, \"rounded-circle\")} src={data?.PersonalInfo?.ImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}` : require('../../../assets/images/Profile.png')} alt=\"profile\"/>\n                    </center>\n                    <div className={classNames(c.profileName, \"text-center\")}>{data?.PersonalInfo.Name || \"Update your name\"}</div>\n                    <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Location || \"Update your location\"}</div>\n                    <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Work || \"Update your work\"}</div>\n            \n                    <div className={classNames(c.boxContainer)}>\n                        <div className={classNames(c.boxTextContainer)}>\n                            <div className={classNames(c.text)}>\n                                {data?.PersonalInfo?.Bio || \"Update your BIO\"}\n                            </div>\n                        </div>\n        \n                        \n                        {\n                            (data?.SocialLinks && Array.isArray(data.SocialLinks) && (data.SocialLinks).length > 0 ) &&\n                            <div className={c.boxSocialContainer}>\n                                {\n                                    (data.SocialLinks).filter(element => element.Name === 'Email' || element.Name === 'Call' || element.Name === 'Gmail' || element.Name === 'Facebook').map((item)=>{\n                                        if (item.isActive === true) { \n                                            return (\n                                                <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                                    <a href={`${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                        <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                    </a>\n                                                </center>) }\n                                        else {\n                                            return(\n                                                null    \n                                            )}\n                                    })\n                                }\n                                {\n                                    (data.SocialLinks).filter(element => element.Name !== 'Email' && element.Name !== 'Call' && element.Name !== 'Gmail' && element.Name !== 'Facebook').map((item)=>{\n                                        if (item.isActive === true) { \n                                            return (\n                                                <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                                    <a href={`https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                        <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                    </a>\n                                                </center>) }\n                                        else {\n                                            return(\n                                                null    \n                                            )}\n                                    })\n                                }\n                            </div>\n                        }\n        \n                        {\n                            data.FeaturedVideo ? (\n                            <div className=\"my-5\">\n                                {\n                                    play ?\n                                    <CardMedia component=\"iframe\" allow=\"autoplay\" allowFullScreen=\"allowfullscreen\" className={classNames(c.videoPlayer)} src={`${videoURL(data?.FeaturedVideo)}?autoplay=1&mute=1`}/>\n                                    :\n                                    <div className={classNames(c.video)} style={{backgroundImage: `url(${thumb})`}}>\n                                        {\n                                            data?.PersonalInfo?.ImageLocation ? \n                                            <div className={classNames(c.icon)} style={{backgroundImage: 'url('+ `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}`+')'}}></div>\n                                            :\n                                            <div className={classNames(c.icon)} style={{backgroundImage: 'url('+ require(\"../../../assets/images/Profile.png\") +')'}}></div>\n                                        }\n                                        <div className={classNames(c.text)}>{data?.PersonalInfo.Name || \"Video Title\"}</div>\n                                        <div className={classNames(c.playerIcon)} onClick={()=>setPlay(true)}>\n                                            <YoutubeIcon/>\n                                        </div>                    \n                                    </div>\n                                }\n                            </div> ) : (null)\n                        }\n        \n                        <div className={classNames(c.bottomApp)}>\n                            <a href='https://caard.club' target='_blank'>\n                                <AppIconDark />\n                            </a>\n                            <center>\n                                <div target='_blank' href='https://caard.club' style={{ textDecoration:'none'}} className={classNames(c.text)}>Powered by Caard</div>\n                            </center>\n                        </div>\n                    \n                </div>\n               </div>\n            </div>\n        )\n    }\n}\nexport default Theme1Bg;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\businessProfile\\theme1\\theme1WithBg.js",["208","209","210","211","212","213","214"],[],"import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport c from './theme1bg.module.scss';\nimport { AppIconDark, YoutubeIcon } from '../../shared/svg';\nimport CardMedia from '@mui/material/CardMedia';\nimport {videoURL} from '../../../helper/theme';\nimport {API_URLS} from \"../../../config/api_urls/api_urls\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nconst Theme1Bg = ({id, data, ...props}) => {\n    const [play, setPlay] = useState(false)\n    \n    const videoId = (data.FeaturedVideo ? data.FeaturedVideo.split(\"?v=\")[1] : \"testtest\") //data.FeaturedVideo.split(\"?v=\")[1];\n    const thumb = \"https://img.youtube.com/vi/\" + videoId + \"/maxresdefault.jpg\"\n    var bgImgs = [\"https://images.unsplash.com/photo-1649401691853-6ecfa00f044e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxlZGl0b3JpYWwtZmVlZHwzNXx8fGVufDB8fHx8&auto=format&fit=crop&w=500&q=60\",\"https://images.unsplash.com/photo-1444090542259-0af8fa96557e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80\",\"https://images.unsplash.com/photo-1596226833102-76b6247dfc2e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=871&q=80\"];\n\n    useEffect(() => {\n        if (data.DirectLink == true) {\n            const rurl = \"https://\" + data.SocialLinks[0].URL;\n            window.location.href = rurl\n        }\n      }, []);\n\n      function getBg() {\n        if (\"BackgroundImage\" in data) {\n            return data?.BackgroundImage;\n        } else {\n            return \"none\";\n        }\n      }\n    \n    if(data.DirectLink == true) {\n        return null\n    } else {\n        return(\n            <div style={{ backgroundImage: `url(${getBg()})` }} className={classNames(c.theme1)}>\n               <div>\n                    <div className={classNames(c.profileBgContainer)}>\n                        \n                    </div>\n                    <center>\n                        <img className={classNames(c.profileImage, \"rounded-circle\")} src={data?.PersonalInfo?.ImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}` : require('../../../assets/images/Profile.png')} alt=\"profile\"/>\n                    </center>\n                    <div className={classNames(c.profileName, \"text-center\")}>{data?.PersonalInfo.Name || \"Update your name\"}</div>\n                    <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Location || \"Update your location\"}</div>\n                    <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Work || \"Update your work\"}</div>\n            \n                    <div className={classNames(c.boxContainer)}>\n                        <div className={classNames(c.boxTextContainer)}>\n                            <div className={classNames(c.text)}>\n                                {data?.PersonalInfo?.Bio || \"Update your BIO\"}\n                            </div>\n                        </div>\n        \n                        \n                        {\n                            (data?.SocialLinks && Array.isArray(data.SocialLinks) && (data.SocialLinks).length > 0 ) &&\n                            <div className={c.boxSocialContainer}>\n                                {\n                                    (data.SocialLinks).filter(element => element.Name === 'Email' || element.Name === 'Call').map((item)=>{\n                                        if (item.isActive === true) { \n                                            return (\n                                                <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                                    <a href={`${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                        <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                    </a>\n                                                </center>) }\n                                        else {\n                                            return(\n                                                null    \n                                            )}\n                                    })\n                                }\n                                {\n                                    (data.SocialLinks).filter(element => element.Name !== 'Email' || element.Name !== 'Call').map((item)=>{\n                                        if (item.isActive === true) { \n                                            return (\n                                                <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                                    <a href={`https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                        <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                    </a>\n                                                </center>) }\n                                        else {\n                                            return(\n                                                null    \n                                            )}\n                                    })\n                                }\n                            </div>\n                        }\n        \n                        {\n                            data.FeaturedVideo ? (\n                            <div className=\"my-5\">\n                                {\n                                    play ?\n                                    <CardMedia component=\"iframe\" allow=\"autoplay\" allowFullScreen=\"allowfullscreen\" className={classNames(c.videoPlayer)} src={`${videoURL(data?.FeaturedVideo)}?autoplay=1&mute=1`}/>\n                                    :\n                                    <div className={classNames(c.video)} style={{backgroundImage: `url(${thumb})`}}>\n                                        {\n                                            data?.PersonalInfo?.ImageLocation ? \n                                            <div className={classNames(c.icon)} style={{backgroundImage: 'url('+ `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}`+')'}}></div>\n                                            :\n                                            <div className={classNames(c.icon)} style={{backgroundImage: 'url('+ require(\"../../../assets/images/Profile.png\") +')'}}></div>\n                                        }\n                                        <div className={classNames(c.text)}>{data?.PersonalInfo.Name || \"Video Title\"}</div>\n                                        <div className={classNames(c.playerIcon)} onClick={()=>setPlay(true)}>\n                                            <YoutubeIcon/>\n                                        </div>                    \n                                    </div>\n                                }\n                            </div> ) : (null)\n                        }\n        \n                        <div className={classNames(c.bottomApp)}>\n                            <a href='https://caard.club' target='_blank'>\n                                <AppIconDark />\n                            </a>\n                            <center>\n                                <div target='_blank' href='https://caard.club' style={{ textDecoration:'none'}} className={classNames(c.text)}>Powered by Caard</div>\n                            </center>\n                        </div>\n                    \n                </div>\n               </div>\n            </div>\n        )\n    }\n}\nexport default Theme1Bg;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\theme2\\index.js",["215","216","217","218","219","220","221","222","223","224"],[],"import classNames from \"classnames\";\nimport React, { useState, useEffect } from \"react\";\nimport c from \"./theme2.module.scss\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport {\n  AppIconDark,\n  LocationPinIcon,\n  YoutubeColoredIcon,\n} from \"../../shared/svg\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { validHttps, videoURL } from \"../../../helper/theme\";\nimport { API_URLS } from \"../../../config/api_urls/api_urls\";\n\nconst Theme2 = ({ id, data, ...props }) => {\n  const [play, setPlay] = useState(false);\n  const navigate = useNavigate();\n  const [url, setUrl] = useState(\n    \"https://media.istockphoto.com/photos/dotted-grid-paper-background-texture-seamless-repeat-pattern-picture-id1320330053?b=1&k=20&m=1320330053&s=170667a&w=0&h=XisfN35UnuxAVP_sjq3ujbFDyWPurSfSTYd-Ll09Ncc=\"\n  );\n\n  const videoId = data.FeaturedVideo\n    ? data.FeaturedVideo.split(\"?v=\")[1]\n    : \"testtest\"; //data.FeaturedVideo.split(\"?v=\")[1];\n  const thumb = \"https://img.youtube.com/vi/\" + videoId + \"/maxresdefault.jpg\";\n  useEffect(() => {\n    if (data.DirectLink == true) {\n      const rurl = \"https://\" + data.SocialLinks[0].URL;\n      window.location.href = rurl; //data.SocialLinks[0].URL;\n    }\n  }, []);\n\n  function getBg() {\n    if (\"BackgroundImage\" in data) {\n      return data?.BackgroundImage;\n    } else {\n      return \"none\";\n    }\n  }\n\n  if (data.DirectLink == true) {\n    return null;\n  } else {\n    return (\n      <div\n        className={classNames(c.theme2)}\n        style={{ backgroundImage: `url(${getBg()})` }}\n        /*style={{backgroundImage: 'url(' + require(\"../../../assets/images/player.png\")+')'}}*/\n      >\n        <div className={classNames(c.modal)}>\n          <div className={classNames(c.boxImage)}>\n            {data?.PersonalInfo?.CoverImageLocation ? (\n              <div\n                className={classNames(c.profileBgImage)}\n                style={{\n                  backgroundImage:\n                    \"url(\" +\n                    `data:image/png;base64,${data?.PersonalInfo?.CoverImageLocation}` +\n                    \")\",\n                }}\n              ></div>\n            ) : (\n              <div\n                className={classNames(c.profileBgImage)}\n                style={{\n                  backgroundImage:\n                    \"url(\" +\n                    require(\"../../../assets/images/BackgroundDark.jpeg\") +\n                    \")\",\n                }}\n              ></div>\n            )}\n          </div>\n          <center>\n            <div className={classNames(c.profileImageBorder, \"rounded-circle\")}>\n              <img\n                className={classNames(c.profileImage, \"rounded-circle\")}\n                src={\n                  data?.PersonalInfo?.ImageLocation\n                    ? `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}`\n                    : require(\"../../../assets/images/Profile.png\")\n                }\n                alt=\"profile\"\n              />\n            </div>\n\n            <div className={classNames(c.profileName, \"text-center\")}>\n              {data?.PersonalInfo.Name || \"Update your name\"}\n            </div>\n            <div className={classNames(c.cityText, \"text-center\")}>\n              {data?.PersonalInfo?.Work || \"Update your work\"}\n            </div>\n            <div className={classNames(c.cityText, \"text-center\")}>\n              <LocationPinIcon />\n              {data?.PersonalInfo?.Location || \"Update your location\"}\n            </div>\n          </center>\n\n          <div className={classNames(c.boxContainer)}>\n            <div className={classNames(c.boxTextContainer)}>\n              <div className={classNames(c.text)}>\n                {data?.PersonalInfo?.Bio || \"Update your BIO\"}\n              </div>\n            </div>\n\n            {/* <div className={classNames(\"my-5\")}>\n                        <div className={classNames(c.sBox)}>\n                        {(data?.SocialLinks && Array.isArray(data.SocialLinks) && ((data.SocialLinks).length > 0) ) &&\n                                data?.SocialLinks.slice(0,3).map((item) => {\n                                    if(item.isActive == true) {\n                                        return(\n                                            <div key={item?.Name} className={classNames(c.sBoxChild)}>\n                                                <a href={item?.Name === \"Call\" ? `${item?.URL}` : `https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>  \n                                                    <div className={classNames(c.socialIcons)}>\n                                                        <div className={classNames(c.socialIconsOuter)}> \n                                                            <div className={classNames(c.socialIcon)}>\n                                                                <img className={classNames(c.socialImage)} src={`${API_URLS.blackAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        )\n                                    } else {\n                                        return null\n                                    }\n                                })}\n                        </div>\n                    </div> */}\n\n            {data?.SocialLinks &&\n              Array.isArray(data.SocialLinks) &&\n              data.SocialLinks.length > 0 && (\n                <div className={classNames(c.socialIconMainContainer, \"mt-5\")}>\n                  {/* //  <div className=\"row justify-content-center mt-3\"> */}\n                  {data.SocialLinks.map((item) => {\n                    if (item.isActive == true) {\n                      return (\n                        <div\n                          key={item?.Name}\n                          className={classNames(c.cursorPointer, \"col-auto\")}\n                        >\n                          <a\n                            href={\n                              validHttps.includes(item?.Name)\n                                ? `${item?.URL}`\n                                : `https://${item?.URL}`\n                            }\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className={c.anchor}\n                          >\n                            <div className={classNames(c.circleIconOuter)}>\n                              <img\n                                className={classNames(c.socialImage)}\n                                src={`${API_URLS.blackAssets}${item?.Name}.svg`}\n                                alt={item?.Name}\n                              />\n                            </div>\n                            <div\n                              className={classNames(\n                                c.circleIconText,\n                                \"text-white mt-2 text-center\"\n                              )}\n                            >\n                              {item?.Name}\n                            </div>\n                          </a>\n                        </div>\n                      );\n                    }\n                  })}\n                </div>\n              )}\n\n            {data.FeaturedVideo ? (\n              <div className=\"mt-5\">\n                {play ? (\n                  <CardMedia\n                    component=\"iframe\"\n                    allow=\"autoplay\"\n                    allowFullScreen=\"allowfullscreen\"\n                    className={classNames(c.videoPlayer)}\n                    src={`${videoURL(data?.FeaturedVideo)}?autoplay=1&mute=1`}\n                  />\n                ) : (\n                  <div\n                    className={classNames(c.videoOuter)}\n                    onClick={() => setPlay(true)}\n                  >\n                    <div\n                      className={classNames(c.video)}\n                      style={{ backgroundImage: `url(${thumb})` }}\n                    >\n                      {data?.PersonalInfo?.ImageLocation ? (\n                        <div\n                          className={classNames(c.icon, \"bg-white\")}\n                          style={{\n                            backgroundImage:\n                              \"url(\" +\n                              `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}` +\n                              \")\",\n                          }}\n                        ></div>\n                      ) : (\n                        <div\n                          className={classNames(c.icon, \"bg-white\")}\n                          style={{\n                            backgroundImage:\n                              \"url(\" +\n                              require(\"../../../assets/images/Profile.png\") +\n                              \")\",\n                          }}\n                        ></div>\n                      )}\n                      <div className={classNames(c.text)}>\n                        {data?.PersonalInfo.Name || \"Video Title\"}\n                      </div>\n                      <div className={classNames(c.playerIcon)}>\n                        <YoutubeColoredIcon />\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ) : null}\n\n            <div className={classNames(c.bottomApp)}>\n              <a href=\"https://caard.club\" target=\"_blank\">\n                <AppIconDark />\n              </a>\n              <center>\n                <div\n                  target=\"_blank\"\n                  href=\"https://caard.club\"\n                  style={{ textDecoration: \"none\" }}\n                  className={classNames(c.text)}\n                >\n                  Powered by Caard\n                </div>\n              </center>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Theme2;\n","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\theme1\\index.js",["225","226","227","228","229","230"],[],"import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport c from './theme1.module.scss';\nimport {AppIcon, YoutubeIcon} from '../../shared/svg';\nimport CardMedia from '@mui/material/CardMedia';\nimport {validHttps, videoURL} from '../../../helper/theme';\nimport {API_URLS} from \"../../../config/api_urls/api_urls\";\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\n\nconst Theme1 = ({id, data, ...props}) => {\n    const [play, setPlay] = useState(false)\n    \n    const videoId = (data.FeaturedVideo ? data.FeaturedVideo.split(\"?v=\")[1] : \"testtest\") //data.FeaturedVideo.split(\"?v=\")[1];\n    const thumb = \"https://img.youtube.com/vi/\" + videoId + \"/maxresdefault.jpg\"\n    \n    useEffect(() => {\n        if (data.DirectLink == true) {\n            const rurl = \"https://\" + data.SocialLinks[0].URL;\n            window.location.href = rurl\n        }\n      }, []);\n\n      function getBg() {\n        if (\"BackgroundImage\" in data) {\n            return data?.BackgroundImage;\n        } else {\n            return \"none\";\n        }\n      }\n    \n    if(data.DirectLink == true) {\n        return null\n    } else {\n        return(\n            <div style={{ background: `url(${getBg()})` }} \n                    className={classNames(c.theme1)}>\n               <div className={classNames(c.modal)}>\n                    {\n                        data.PersonalInfo?.CoverImageLocation &&\n                        <div className={classNames(c.profileBgContainer)}>\n                            <img className={classNames(c.profileBgImage)} src={`data:image/png;base64,${data?.PersonalInfo?.CoverImageLocation}`} alt=\"bg-img\"/>\n                        </div>\n                    }\n                    \n                    <div className={classNames(\"d-flex justify-content-center\")}>\n                        <img className={classNames(c.profileImage, \"rounded-circle\", data.PersonalInfo?.CoverImageLocation ? c.withBg : c.withoutBg)} src={data?.PersonalInfo?.ImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}` : require('../../../assets/images/Profile.png')} alt=\"profile\"/>\n                    </div>\n                    \n                    <div className={classNames(c.profileName, \"text-center\")}>{data?.PersonalInfo.Name || \"Update your name\"}</div>\n                    <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Work || \"Update your work\"}</div>\n                    <div className={classNames(c.cityText, \"text-center\")}><LocationOnIcon/>{data?.PersonalInfo?.Location || \"Update your location\"}</div>\n            \n                    <div className={classNames(c.boxContainer)}>\n                        <div className={classNames(c.boxTextContainer)}>\n                            <div className={classNames(c.text)}>\n                                {data?.PersonalInfo?.Bio || \"Update your BIO\"}\n                            </div>\n                        </div>\n                        {\n                            data && data?.SocialLinks?.map((item)=>{\n                                        if (item.isActive === true) { \n                                            return (\n                                                <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                                    <a href={validHttps.includes(item?.Name) ? `${item?.URL}` : `https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                        <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                    </a>\n                                                </center>) }\n                                        else {\n                                            return(\n                                                null    \n                                            )}\n                                    })\n                        }\n                        {/* {\n                            data.SocialLinks.filter(element => element.Name === 'Email' || element.Name === 'Call' || element.Name === 'Gmail' || element.Name === 'Facebook').map((item)=>{\n                                if (item.isActive === true) { \n                                    return (\n                                        <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                            <a href={`${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                            </a>\n                                        </center>) }\n                                else {\n                                    return(\n                                        null    \n                                        )}\n                                })\n                        } */}\n        \n                        {\n                            data.FeaturedVideo ? (\n                            <div className=\"my-5\">\n                                {\n                                    play ?\n                                    <CardMedia component=\"iframe\" allow=\"autoplay\" allowFullScreen=\"allowfullscreen\" className={classNames(c.videoPlayer)} src={`${videoURL(data?.FeaturedVideo)}?autoplay=1&mute=1`}/>\n                                    :\n                                    <div className={classNames(c.video)} style={{backgroundImage: `url(${thumb})`}}>\n                                        {\n                                            data?.PersonalInfo?.ImageLocation ? \n                                            <div className={classNames(c.icon)} style={{backgroundImage: 'url('+ `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}`+')'}}></div>\n                                            :\n                                            <div className={classNames(c.icon)} style={{backgroundImage: 'url('+ require(\"../../../assets/images/Profile.png\") +')'}}></div>\n                                        }\n                                        <div className={classNames(c.text)}>{data?.PersonalInfo.Name || \"Video Title\"}</div>\n                                        <div className={classNames(c.playerIcon)} onClick={()=>setPlay(true)}>\n                                            <YoutubeIcon/>\n                                        </div>                    \n                                    </div>\n                                }\n                            </div> ) : (null)\n                        }\n        \n                        <div className={classNames(c.bottomApp)}>\n                            <a href='https://caard.club' target='_blank'>\n                                <AppIcon/>\n                            </a>\n                            <center>\n                                <div target='_blank' href='https://caard.club' style={{ textDecoration:'none'}} className={classNames(c.text)}>Powered by Caard</div>\n                            </center>\n                        </div>\n                    \n                </div>\n               </div>\n            </div>\n        )\n    }\n}\nexport default Theme1;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\businessProfile\\theme1\\index.js",["231","232","233","234","235","236","237"],[],"import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport c from './theme1.module.scss';\nimport {AppIcon, YoutubeIcon} from '../../shared/svg';\nimport CardMedia from '@mui/material/CardMedia';\nimport {videoURL} from '../../../helper/theme';\nimport {API_URLS} from \"../../../config/api_urls/api_urls\";\n\nconst Theme1 = ({id, data, ...props}) => {\n    const [play, setPlay] = useState(false)\n    \n    const videoId = (data.FeaturedVideo ? data.FeaturedVideo.split(\"?v=\")[1] : \"testtest\") //data.FeaturedVideo.split(\"?v=\")[1];\n    const thumb = \"https://img.youtube.com/vi/\" + videoId + \"/maxresdefault.jpg\"\n    \n    useEffect(() => {\n        if (data.DirectLink == true) {\n            const rurl = \"https://\" + data.SocialLinks[0].URL;\n            window.location.href = rurl\n        }\n      }, []);\n\n      function getBg() {\n        if (\"BackgroundImage\" in data) {\n            return data?.BackgroundImage;\n        } else {\n            return \"none\";\n        }\n      }\n    \n    if(data.DirectLink == true) {\n        return null\n    } else {\n        return(\n            <div \n                    className={classNames(c.theme1)}>\n               <div className={classNames(c.modal)}>\n                    <div className={classNames(c.profileBgContainer)}>\n                        <img className={classNames(c.profileBgImage)} src={data?.PersonalInfo?.CoverImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.CoverImageLocation}` : \"https://i.pinimg.com/originals/f5/05/24/f50524ee5f161f437400aaf215c9e12f.jpg\"} alt=\"bg-img\"/>\n                    </div>\n                    <center>\n                        <img className={classNames(c.profileImage, \"rounded-circle\")} src={data?.PersonalInfo?.ImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}` : require('../../../assets/images/Profile.png')} alt=\"profile\"/>\n                    </center>\n                    <div className={classNames(c.profileName, \"text-center\")}>{data?.PersonalInfo.Name || \"Update your name\"}</div>\n                    <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Location || \"Update your location\"}</div>\n                    <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Work || \"Update your work\"}</div>\n            \n                    <div className={classNames(c.boxContainer)}>\n                        <div className={classNames(c.boxTextContainer)}>\n                            <div className={classNames(c.text)}>\n                                {data?.PersonalInfo?.Bio || \"Update your BIO\"}\n                            </div>\n                        </div>\n        \n                        \n                        {\n                            data.SocialLinks.filter(element => element.Name !== 'Email' && element.Name !== 'Call').map((item)=>{\n                                        if (item.isActive === true) { \n                                            return (\n                                                <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                                    <a href={`https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                        <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                    </a>\n                                                </center>) }\n                                        else {\n                                            return(\n                                                null    \n                                            )}\n                                    })\n                        }\n                        {\n                            data.SocialLinks.filter(element => element.Name === 'Email' || element.Name === 'Call').map((item)=>{\n                                if (item.isActive === true) { \n                                    return (\n                                        <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                            <a href={`${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                            </a>\n                                        </center>) }\n                                else {\n                                    return(\n                                        null    \n                                        )}\n                                })\n                        }\n        \n                        {\n                            data.FeaturedVideo ? (\n                            <div className=\"my-5\">\n                                {\n                                    play ?\n                                    <CardMedia component=\"iframe\" allow=\"autoplay\" allowFullScreen=\"allowfullscreen\" className={classNames(c.videoPlayer)} src={`${videoURL(data?.FeaturedVideo)}?autoplay=1&mute=1`}/>\n                                    :\n                                    <div className={classNames(c.video)} style={{backgroundImage: `url(${thumb})`}}>\n                                        {\n                                            data?.PersonalInfo?.ImageLocation ? \n                                            <div className={classNames(c.icon)} style={{backgroundImage: 'url('+ `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}`+')'}}></div>\n                                            :\n                                            <div className={classNames(c.icon)} style={{backgroundImage: 'url('+ require(\"../../../assets/images/Profile.png\") +')'}}></div>\n                                        }\n                                        <div className={classNames(c.text)}>{data?.PersonalInfo.Name || \"Video Title\"}</div>\n                                        <div className={classNames(c.playerIcon)} onClick={()=>setPlay(true)}>\n                                            <YoutubeIcon/>\n                                        </div>                    \n                                    </div>\n                                }\n                            </div> ) : (null)\n                        }\n        \n                        <div className={classNames(c.bottomApp)}>\n                            <a href='https://caard.club' target='_blank'>\n                                <AppIcon/>\n                            </a>\n                            <center>\n                                <div target='_blank' href='https://caard.club' style={{ textDecoration:'none'}} className={classNames(c.text)}>Powered by Caard</div>\n                            </center>\n                        </div>\n                    \n                </div>\n               </div>\n            </div>\n        )\n    }\n}\nexport default Theme1;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\businessProfile\\theme2\\index.js",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],[],"import classNames from 'classnames';\nimport React, { useState, useEffect } from 'react';\nimport c from './theme2.module.scss';\nimport { useNavigate, Link } from 'react-router-dom';\nimport {AppIconDark, AppIcon, LocationPinIcon, YoutubeColoredIcon, AboutArrowIcon } from '../../shared/svg';\nimport CardMedia from '@mui/material/CardMedia';\nimport {videoURL} from '../../../helper/theme'\nimport {API_URLS} from \"../../../config/api_urls/api_urls\";\nimport GoogleMapReact from 'google-map-react';\nimport Zoom from 'react-medium-image-zoom'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport 'react-medium-image-zoom/dist/styles.css'\nimport { Carousel } from 'react-responsive-carousel';\n\nconst Theme2 = ({id, data, ...props}) => {\n    const [play, setPlay] = useState(false); \n    const navigate = useNavigate();\n    const [url, setUrl] = useState(\"https://media.istockphoto.com/photos/dotted-grid-paper-background-texture-seamless-repeat-pattern-picture-id1320330053?b=1&k=20&m=1320330053&s=170667a&w=0&h=XisfN35UnuxAVP_sjq3ujbFDyWPurSfSTYd-Ll09Ncc=\")\n\n    const videoId = (data.BusinessMode.FeaturedVideo ? data.BusinessMode.FeaturedVideo.split(\"?v=\")[1] : \"testtest\") //data.FeaturedVideo.split(\"?v=\")[1];\n    const thumb = \"https://img.youtube.com/vi/\" + videoId + \"/maxresdefault.jpg\"\n    const renderArrow = direction => (onClickHandler, shouldBeEnabled, label) => {\n        if (!shouldBeEnabled) {\n          return;\n        }\n      \n        const styles = {\n          position: \"absolute\",\n          top: \"45%\",\n          zIndex: 2,\n          border: 'none',\n          backgroundColor: 'transparent'\n        };\n      \n        if (direction === \"prev\") {\n          styles.left = 10;\n        } else {\n          styles.right = 10;\n        }\n      \n        return (\n          <button type=\"button\" onClick={onClickHandler} style={styles}>\n            {direction === \"prev\" ? (\n                <svg width=\"14\" height=\"24\" viewBox=\"0 0 14 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M15.3812 -2.44301L2.53299 12.0003L15.3812 26.4436L15.3812 -2.44301Z\" stroke=\"white\" stroke-width=\"3\"/>\n                </svg>        \n            ) : (\n                <svg width=\"14\" height=\"24\" viewBox=\"0 0 14 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M-1.84211 -2.44301L11.0061 12.0003L-1.84211 26.4436L-1.84211 -2.44301Z\" stroke=\"white\" stroke-width=\"3\"/>\n                </svg>\n            )}\n          </button>\n        );\n      };\n\n    useEffect(() => {\n        if (data.DirectLink == true) {\n            const rurl = \"https://\" + data.SocialLinks[0].URL;\n            window.location.href = rurl//data.SocialLinks[0].URL;\n        }\n      }, []);\n\n    function getBg() {\n        if (\"BackgroundImage\" in data) {\n            return data?.BackgroundImage;\n        } else {\n            return \"none\";\n        }\n      }\n      \n    if (data.DirectLink == true) { \n        return null\n    } else {\n        return(\n            <div className={classNames(c.theme2)}\n            /*style={{backgroundImage: 'url(' + require(\"../../../assets/images/player.png\")+')'}}*/>\n                <div className={classNames(c.modal)}>\n                    <div className={classNames(c.boxImage)}>\n                            <Carousel\n                                renderArrowPrev={renderArrow(\"prev\")}\n                                renderArrowNext={renderArrow(\"next\")}                            \n                                renderIndicator={(\n                                    onClickHandler, isSelected,index, label\n                                  ) => {\n                                      if(isSelected) {\n                                          return (\n                                            <div style={{ position: 'absolute', display: 'flex', flexDirection: 'row', alignItems: 'baseline', left: 16, top: -135 }} >\n                                                <svg style={{ marginRight: 8}} width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"white\" fillOpacity={index-0.5}/>\n                                                </svg>\n                                                <svg style={{ marginRight: 8}} width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"white\" fill-opacity={index-0.5}  />\n                                                </svg>\n                                                <svg style={{ marginRight: 8}} width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"white\" fill-opacity={index-0.5}  />\n                                                </svg>\n                                                <svg style={{ marginRight: 8}} width=\"8\" height=\"8\" viewBox=\"0 0 8 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <circle cx=\"4\" cy=\"4\" r=\"4\" fill=\"white\" fill-opacity={index-0.5}  />\n                                                </svg>\n                                                <p style={{ color:\"#fff\" }}>{index + 1}/4</p>\n                                            </div>\n                                          )\n                                      }\n                                  }}\n                                autoPlay={true}\n                                interval={10000}\n                                infiniteLoop={true}\n                                showArrows={true} showStatus={false}\n                                showIndicators={true} showThumbs={false}>\n                                {JSON.parse(data.BusinessMode.PersonalInfo.CoverImage).map(element => (\n                                    <img className={classNames(c.profileBgImage)} src={data?.PersonalInfo?.CoverImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.CoverImageLocation}` : element.URL} alt=\"bg-img\"/>\n                                ))}\n                        </Carousel>  \n                    </div>\n                    <center>\n                        <div className={classNames(c.profileImageBorder, \"rounded-circle\")}>\n                            <img className={classNames(c.profileImage, \"rounded-circle\")} src={data?.PersonalInfo?.ImageLocation ? `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}` : require('../../../assets/images/Profile.png')} alt=\"profile\"/>\n                        </div>\n\n                        <div className={classNames(c.profileName, \"text-center\")}>{data?.PersonalInfo.Name || \"Update your name\"}</div>\n                        <div className={classNames(c.citylayout)}>\n                            <div className={classNames(c.cityText, \"text-center\")}>{data?.PersonalInfo?.Work || \"Update your work\"}</div>\n                            <div className={classNames(c.cityText)}>&emsp;|&emsp;</div>\n                            <div className={classNames(c.cityText, \"text-center\")}><LocationPinIcon/>{data?.PersonalInfo?.Location || \"Update your location\"}</div>\n                        </div>\n                    </center>\n\n                    <div className={classNames(c.boxContainer)}>\n                        <div className={classNames(c.boxTextContainer)}>\n                            <div className={classNames(c.title)}>\n                                <p style={{ marginTop:12, marginRight:10 }}>About</p>\n                                <AboutArrowIcon />\n                            </div>\n                            <div className={classNames(c.text)}>\n                                {data?.BusinessMode.PersonalInfo?.Bio || \"Update your BIO\"}\n                            </div>\n                        </div>\n\n                        <div className={classNames(c.doclayout)}>\n                            <div className={classNames(c.docText)}>{\"Company Documents\"}</div>\n                            <div className={classNames(c.cityText)}>&emsp;|&emsp;</div>\n                            <div className={classNames(c.dwText)}>{\"download List Below\"}</div>\n                        </div>\n\n                        <div className={classNames(c.brochureContainer)}>\n                            <svg width=\"19\" height=\"34\" viewBox=\"0 0 19 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M21.8289 -5.10404L2.16581 17.0003L21.8289 39.1046L21.8289 -5.10404Z\" stroke=\"black\" stroke-width=\"3\"/>\n                            </svg>\n                            <div className={classNames(c.brochure)}>\n                                <svg width=\"45\" height=\"49\" viewBox=\"0 0 45 49\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M0.944395 14.5218L15.3161 0.157227H41.6391C42.9607 0.157227 44.038 1.24654 44.038 2.53216V45.6641C44.0374 46.2942 43.7866 46.8982 43.3408 47.3435C42.8951 47.7889 42.2908 48.039 41.6607 48.039H3.32173C3.00733 48.0368 2.69644 47.9727 2.40681 47.8504C2.11719 47.728 1.8545 47.5498 1.63374 47.326C1.41298 47.1021 1.23848 46.8369 1.12021 46.5456C1.00193 46.2543 0.942187 45.9426 0.944395 45.6282V14.5218ZM17.703 3.74836L4.53553 16.9158H17.703V3.74836Z\" fill=\"#222222\"/>\n                                </svg>\n                                <p className={classNames(c.btext)}>Brochure.pdf</p>\n                            </div>\n                            <svg width=\"19\" height=\"34\" viewBox=\"0 0 19 34\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M-3.23514 -5.10404L16.4279 17.0003L-3.23514 39.1046L-3.23514 -5.10404Z\" stroke=\"black\" stroke-width=\"3\"/>\n                            </svg>\n                        </div>\n\n                        <div className={classNames(c.doclayout)}>\n                            <div className={classNames(c.docText)}>{\" Company Images\"}</div>\n                            <div className={classNames(c.cityText)}>&emsp;|&emsp;</div>\n                            <div className={classNames(c.dwText)}>{\"Tap or slide to view more\"}</div>\n                        </div>\n\n                        <div className={classNames(c.companyImages)}>\n                            <div className={classNames(c.companyContainer)}>\n                                <div style={{ display: 'flex', flexDirection: 'column', marginRight:24 }}>\n                                    <Zoom>\n                                        <img className={classNames(c.image)} src='https://images.unsplash.com/photo-1480714378408-67cf0d13bc1b?crop=entropy&cs=tinysrgb&fm=jpg&ixlib=rb-1.2.1&q=60&raw_url=true&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8YnVpbGRpbmdzfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500' />\n                                    </Zoom>\n                                    <div className={classNames(c.description)}>Godrej Emerald Mumbai</div>\n                                </div>\n\n                                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                    <Zoom>\n                                        <img className={classNames(c.image)} src='https://images.unsplash.com/photo-1480714378408-67cf0d13bc1b?crop=entropy&cs=tinysrgb&fm=jpg&ixlib=rb-1.2.1&q=60&raw_url=true&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8YnVpbGRpbmdzfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500' />\n                                    </Zoom>\n                                    <div className={classNames(c.description)}>Godrej Emerald Mumbai</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {\n                            data.BusinessMode.FeaturedVideo ? (\n                            <div>\n                            {\n                                play ?\n                                    <CardMedia component=\"iframe\" allow=\"autoplay\" allowFullScreen=\"allowfullscreen\" className={classNames(c.videoPlayer)} \n                                        src={`${videoURL(data?.BusinessMode.FeaturedVideo)}?autoplay=1&mute=1`}\n                                    />\n                                :\n                                    <div className={classNames(c.videoOuter)} onClick={()=>setPlay(true)}>\n                                        <div className={classNames(c.video)} style={{backgroundImage: `url(${thumb})`}}>\n                                            {\n                                                data?.PersonalInfo?.ImageLocation ? \n                                                <div className={classNames(c.icon,\"bg-white\")} style={{backgroundImage: 'url('+ `data:image/png;base64,${data?.PersonalInfo?.ImageLocation}`+')'}}></div>\n                                                :\n                                                <div className={classNames(c.icon,\"bg-white\" )} style={{backgroundImage: 'url('+ require(\"../../../assets/images/Profile.png\") +')'}}></div>\n                                            }\n                                            <div className={classNames(c.text)}>{data?.PersonalInfo.Name || \"Video Title\"}</div>\n                                            <div className={classNames(c.playerIcon)}>\n                                                <YoutubeColoredIcon/>\n                                            </div>                    \n                                        </div>\n                                    </div>\n                            }\n                            </div>\n                            ) : (null)\n                        }\n\n                        <div className={classNames(c.doclayout)}>\n                            <div className={classNames(c.docText)}>{\"social/other link\"}</div>\n                            <div className={classNames(c.cityText)}>&emsp;|&emsp;</div>\n                            <div className={classNames(c.dwText)}>{\"Tap to view \"}</div>\n                        </div>\n\n                        <div className={classNames(\"my-0\")}>\n                        {\n                            (data?.SocialLinks && Array.isArray(data.SocialLinks) && (data.SocialLinks).length > 0 ) &&\n                            <div className={c.boxSocialContainer}>\n                                {\n                                    (data.SocialLinks).filter(element => element.Name === 'Email' || element.Name === 'Call').map((item)=>{\n                                        if (item.isActive === true) { \n                                            return (\n                                                <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                                    <a href={`${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                        <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                    </a>\n                                                </center>) }\n                                        else {\n                                            return(\n                                                null    \n                                            )}\n                                    })\n                                }\n                                {\n                                    (data.SocialLinks).filter(element => element.Name !== 'Email' || element.Name !== 'Call').map((item)=>{\n                                        if (item.isActive === true) { \n                                            return (\n                                                <center className={classNames(\"mt-1\")} key={item?.Order}>\n                                                    <a href={`https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>\n                                                        <img className={classNames(c.socialImage)} src={`${API_URLS.whiteAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                    </a>\n                                                </center>) }\n                                        else {\n                                            return(\n                                                null    \n                                            )}\n                                    })\n                                }\n                            </div>\n                        }\n                        </div>\n                        \n\n                        {\n                            (data?.SocialLinks && Array.isArray(data.SocialLinks) && ((data.SocialLinks).length > 3) ) &&\n                            <div className=\"row justify-content-center mt-3\">\n                                {\n                                    data.SocialLinks.slice(3).map((item)=>{\n                                        if (item.isActive == true) {\n                                            return (\n                                                <div key={item?.Name} className={classNames(c.cursorPointer,\"col-auto mt-4\")}>\n                                                    <a href={`https://${item?.URL}`} target=\"_blank\" rel=\"noopener noreferrer\" className={c.anchor}>  \n                                                        <div className={classNames(c.circleIcon)}>\n                                                            <div className={classNames(c.centerIcon)}>\n                                                                <img className={classNames(c.socialImage)} src={`${API_URLS.blackAssets}${item?.Name}.svg`} alt={item?.Name}/>\n                                                            </div>\n                                                        </div>\n                                                        <div className={classNames(c.circleIconText, \"text-white mt-2 text-center\")}>{item?.Name}</div>\n                                                    </a>    \n                                                </div>\n                                            )\n                                        } else {\n                                            return (<div></div>)\n                                        }\n                                    })\n                                }\n                            </div>\n                        }\n\n                        <div className={classNames(c.doclayout)}>\n                            <div className={classNames(c.docText)}>{\"Office Location\"}</div>\n                            <div className={classNames(c.cityText)}>&emsp;|&emsp;</div>\n                            <div className={classNames(c.dwText)}>{\"Tap to view/navigate on maps\"}</div>\n                        </div>\n\n                        <div className={classNames(c.map)}>\n                            <GoogleMapReact\n                                bootstrapURLKeys={{\n                                    key: \"AIzaSyAlnnM9sOIHkH1Ifu6J6BzKJREXShuEH6s\",\n                                    language: \"en\",\n                                    region: \"US\"\n                                }}\n                                defaultCenter={{ lat: 51.506, lng: -0.169 }}\n                                defaultZoom={15}\n                                >\n\n                            </GoogleMapReact>\n                        </div>\n                        \n                        <div className={classNames(c.bottomApp)}>\n                            <p className={classNames(c.thanks)}>Thank You!</p>\n                            <p className={classNames(c.note)}>For using our product to leveling up your Business online.</p>\n                            <a href='https://caard.club' target='_blank'>\n                                <svg width=\"19\" height=\"37\" viewBox=\"0 0 19 37\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M17.2401 36.1912C17.057 36.1912 16.863 36.1445 16.6635 36.0446L4.63527 30.1695C3.12935 29.4335 1.96234 28.4143 1.16975 27.1421C0.39356 25.9031 0 24.471 0 22.8856L0 12.1279C0 10.013 1.6453 8.04467 4.63527 6.58256L16.6662 0.704141C17.1117 0.487655 17.538 0.5143 17.866 0.784075C18.194 1.05385 18.3744 1.52679 18.3744 2.11296V10.8623C18.3744 11.4119 18.2131 12.0047 17.9207 12.5309C17.6282 13.0572 17.2374 13.4602 16.8192 13.6633L7.17701 18.376L16.8165 23.0854C17.2347 23.2886 17.6282 23.6916 17.9179 24.2178C18.2104 24.7441 18.3716 25.3369 18.3716 25.8864V34.6358C18.3716 35.222 18.1912 35.6949 17.8633 35.9647C17.6829 36.1179 17.4697 36.1912 17.2401 36.1912ZM17.2401 1.06051C17.109 1.06051 16.9668 1.09715 16.8192 1.17042L4.78832 7.04551C3.34526 7.75159 2.23018 8.56757 1.47585 9.47681C0.76799 10.3294 0.409959 11.2187 0.409959 12.1279L0.409959 22.8889C0.409959 25.9097 1.96507 28.3311 4.78832 29.7099L16.8192 35.585C17.1363 35.7382 17.426 35.7282 17.6364 35.555C17.8469 35.3818 17.9644 35.0554 17.9644 34.6425V25.8864C17.9644 24.9472 17.3823 23.8981 16.6662 23.5484L6.07559 18.376L16.6662 13.2037C17.3823 12.854 17.9644 11.8049 17.9644 10.8657V2.11296C17.9644 1.69665 17.8469 1.37358 17.6364 1.20039C17.5244 1.10714 17.3877 1.06051 17.2401 1.06051Z\" fill=\"#171717\"/>\n                                    <path d=\"M5.06202 6.5943C0.285031 8.86606 -0.0353773 12.0371 0.401542 13.3386C1.12974 15.7523 4.92852 17.746 6.73688 18.4412C9.91669 16.829 16.3928 13.5516 16.8589 13.3386C17.3249 13.1256 17.9269 11.9779 18.1696 11.4307V1.71358C18.1696 1.28762 17.6113 0.944493 17.3322 0.826172C15.2325 1.80232 9.83901 4.32255 5.06202 6.5943Z\" fill=\"#171717\"/>\n                                </svg>\n                            </a>\n                            <div className={classNames(c.borderBottom)} />\n                            <center>\n                                <div target='_blank' href='https://caard.club' style={{ textDecoration:'none'}} className={classNames(c.text)}>Powered by Caard</div>\n                            </center>\n                            <div className={classNames(c.fNote)}>\n                                <p> © Caard Club 2022</p>\n                                <p>caard.club</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Theme2;","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\config\\api_urls\\api_urls.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\shared\\svg\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\Bio\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\SocialLink\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\TopSocialLinks\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\UserDetails\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\UserDetails\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\Bio\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\Player\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\SocialLink\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Comic\\Player\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\SocialAndGetInTouch\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\shared\\footer\\index.js",["254"],[],"import classNames from \"classnames\";\nimport { AppIcon } from \"../svg\";\nimport c from \"./footer.module.scss\";\nexport const Footer = ({\n  footerIcon,\n  classToOverride,\n  classToOverrideText,\n  ...props\n}) => {\n  return (\n    <div className={classNames(c.footer, classToOverride)}>\n      <a href=\"https://caard.club\" target=\"_blank\">\n        {props?.children ? props?.children : <AppIcon />}\n      </a>\n      <center>\n        <div\n          target=\"_blank\"\n          href=\"https://caard.club\"\n          className={classNames(c.text, classToOverrideText)}\n        >\n          {\"Powered by Caard\"}\n          {/* {props?.footerText || \"Powered by Caard\"} */}\n        </div>\n      </center>\n    </div>\n  );\n};\n","C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\TopSocial\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\shared\\VideoPlayer\\index.js",[],[],"C:\\Users\\Pavan\\Desktop\\CAARD\\ReactJS-Code\\src\\components\\profile\\Influencer2\\SocialAndGetInTouch\\GetInTouch\\index.js",[],[],{"ruleId":"255","severity":1,"message":"256","line":7,"column":9,"nodeType":"257","messageId":"258","endLine":7,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":18,"column":8,"nodeType":"261","endLine":18,"endColumn":10,"suggestions":"262"},{"ruleId":"259","severity":1,"message":"260","line":18,"column":8,"nodeType":"261","endLine":18,"endColumn":10,"suggestions":"263"},{"ruleId":"255","severity":1,"message":"264","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":16},{"ruleId":"255","severity":1,"message":"265","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":8,"column":14,"nodeType":"268","messageId":"269","endLine":8,"endColumn":16},{"ruleId":"266","severity":1,"message":"267","line":8,"column":34,"nodeType":"268","messageId":"269","endLine":8,"endColumn":36},{"ruleId":"266","severity":1,"message":"267","line":11,"column":20,"nodeType":"268","messageId":"269","endLine":11,"endColumn":22},{"ruleId":"255","severity":1,"message":"270","line":12,"column":12,"nodeType":"257","messageId":"258","endLine":12,"endColumn":15},{"ruleId":"255","severity":1,"message":"271","line":12,"column":17,"nodeType":"257","messageId":"258","endLine":12,"endColumn":23},{"ruleId":"255","severity":1,"message":"272","line":13,"column":9,"nodeType":"257","messageId":"258","endLine":13,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":18,"column":29,"nodeType":"268","messageId":"269","endLine":18,"endColumn":31},{"ruleId":"259","severity":1,"message":"273","line":22,"column":10,"nodeType":"261","endLine":22,"endColumn":12,"suggestions":"274"},{"ruleId":"266","severity":1,"message":"267","line":32,"column":25,"nodeType":"268","messageId":"269","endLine":32,"endColumn":27},{"ruleId":"266","severity":1,"message":"267","line":89,"column":54,"nodeType":"268","messageId":"269","endLine":89,"endColumn":56},{"ruleId":"275","severity":1,"message":"276","line":123,"column":127,"nodeType":"268","messageId":"277","endLine":123,"endColumn":128},{"ruleId":"275","severity":1,"message":"276","line":123,"column":189,"nodeType":"268","messageId":"277","endLine":123,"endColumn":190},{"ruleId":"278","severity":1,"message":"279","line":186,"column":29,"nodeType":"280","messageId":"281","endLine":186,"endColumn":74,"fix":"282"},{"ruleId":"255","severity":1,"message":"272","line":15,"column":9,"nodeType":"257","messageId":"258","endLine":15,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":18,"column":29,"nodeType":"268","messageId":"269","endLine":18,"endColumn":31},{"ruleId":"259","severity":1,"message":"273","line":22,"column":10,"nodeType":"261","endLine":22,"endColumn":12,"suggestions":"283"},{"ruleId":"266","severity":1,"message":"267","line":32,"column":24,"nodeType":"268","messageId":"269","endLine":32,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":102,"column":112,"nodeType":"268","messageId":"277","endLine":102,"endColumn":113},{"ruleId":"275","severity":1,"message":"276","line":102,"column":174,"nodeType":"268","messageId":"277","endLine":102,"endColumn":175},{"ruleId":"278","severity":1,"message":"279","line":116,"column":29,"nodeType":"280","messageId":"281","endLine":116,"endColumn":74,"fix":"284"},{"ruleId":"255","severity":1,"message":"272","line":15,"column":9,"nodeType":"257","messageId":"258","endLine":15,"endColumn":15},{"ruleId":"266","severity":1,"message":"267","line":18,"column":29,"nodeType":"268","messageId":"269","endLine":18,"endColumn":31},{"ruleId":"259","severity":1,"message":"273","line":22,"column":10,"nodeType":"261","endLine":22,"endColumn":12,"suggestions":"285"},{"ruleId":"266","severity":1,"message":"267","line":32,"column":24,"nodeType":"268","messageId":"269","endLine":32,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":102,"column":112,"nodeType":"268","messageId":"277","endLine":102,"endColumn":113},{"ruleId":"275","severity":1,"message":"276","line":102,"column":174,"nodeType":"268","messageId":"277","endLine":102,"endColumn":175},{"ruleId":"278","severity":1,"message":"279","line":116,"column":29,"nodeType":"280","messageId":"281","endLine":116,"endColumn":74,"fix":"286"},{"ruleId":"255","severity":1,"message":"287","line":4,"column":23,"nodeType":"257","messageId":"258","endLine":4,"endColumn":27},{"ruleId":"255","severity":1,"message":"288","line":16,"column":9,"nodeType":"257","messageId":"258","endLine":16,"endColumn":17},{"ruleId":"255","severity":1,"message":"270","line":17,"column":10,"nodeType":"257","messageId":"258","endLine":17,"endColumn":13},{"ruleId":"255","severity":1,"message":"271","line":17,"column":15,"nodeType":"257","messageId":"258","endLine":17,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":26,"column":25,"nodeType":"268","messageId":"269","endLine":26,"endColumn":27},{"ruleId":"259","severity":1,"message":"273","line":30,"column":6,"nodeType":"261","endLine":30,"endColumn":8,"suggestions":"289"},{"ruleId":"266","severity":1,"message":"267","line":40,"column":23,"nodeType":"268","messageId":"269","endLine":40,"endColumn":25},{"ruleId":"290","severity":1,"message":"291","line":135,"column":48,"nodeType":"292","messageId":"293","endLine":135,"endColumn":50},{"ruleId":"266","severity":1,"message":"267","line":136,"column":39,"nodeType":"268","messageId":"269","endLine":136,"endColumn":41},{"ruleId":"278","severity":1,"message":"279","line":228,"column":15,"nodeType":"280","messageId":"281","endLine":228,"endColumn":60,"fix":"294"},{"ruleId":"266","severity":1,"message":"267","line":17,"column":29,"nodeType":"268","messageId":"269","endLine":17,"endColumn":31},{"ruleId":"259","severity":1,"message":"273","line":21,"column":10,"nodeType":"261","endLine":21,"endColumn":12,"suggestions":"295"},{"ruleId":"266","severity":1,"message":"267","line":31,"column":24,"nodeType":"268","messageId":"269","endLine":31,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":100,"column":112,"nodeType":"268","messageId":"277","endLine":100,"endColumn":113},{"ruleId":"275","severity":1,"message":"276","line":100,"column":174,"nodeType":"268","messageId":"277","endLine":100,"endColumn":175},{"ruleId":"278","severity":1,"message":"279","line":114,"column":29,"nodeType":"280","messageId":"281","endLine":114,"endColumn":74,"fix":"296"},{"ruleId":"266","severity":1,"message":"267","line":16,"column":29,"nodeType":"268","messageId":"269","endLine":16,"endColumn":31},{"ruleId":"259","severity":1,"message":"273","line":20,"column":10,"nodeType":"261","endLine":20,"endColumn":12,"suggestions":"297"},{"ruleId":"255","severity":1,"message":"298","line":22,"column":16,"nodeType":"257","messageId":"258","endLine":22,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":30,"column":24,"nodeType":"268","messageId":"269","endLine":30,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":96,"column":112,"nodeType":"268","messageId":"277","endLine":96,"endColumn":113},{"ruleId":"275","severity":1,"message":"276","line":96,"column":174,"nodeType":"268","messageId":"277","endLine":96,"endColumn":175},{"ruleId":"278","severity":1,"message":"279","line":110,"column":29,"nodeType":"280","messageId":"281","endLine":110,"endColumn":74,"fix":"299"},{"ruleId":"255","severity":1,"message":"287","line":4,"column":23,"nodeType":"257","messageId":"258","endLine":4,"endColumn":27},{"ruleId":"255","severity":1,"message":"300","line":5,"column":9,"nodeType":"257","messageId":"258","endLine":5,"endColumn":20},{"ruleId":"255","severity":1,"message":"301","line":5,"column":22,"nodeType":"257","messageId":"258","endLine":5,"endColumn":29},{"ruleId":"255","severity":1,"message":"288","line":17,"column":11,"nodeType":"257","messageId":"258","endLine":17,"endColumn":19},{"ruleId":"255","severity":1,"message":"270","line":18,"column":12,"nodeType":"257","messageId":"258","endLine":18,"endColumn":15},{"ruleId":"255","severity":1,"message":"271","line":18,"column":17,"nodeType":"257","messageId":"258","endLine":18,"endColumn":23},{"ruleId":"266","severity":1,"message":"267","line":57,"column":29,"nodeType":"268","messageId":"269","endLine":57,"endColumn":31},{"ruleId":"259","severity":1,"message":"273","line":61,"column":10,"nodeType":"261","endLine":61,"endColumn":12,"suggestions":"302"},{"ruleId":"255","severity":1,"message":"298","line":63,"column":14,"nodeType":"257","messageId":"258","endLine":63,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":71,"column":25,"nodeType":"268","messageId":"269","endLine":71,"endColumn":27},{"ruleId":"303","severity":1,"message":"304","line":170,"column":41,"nodeType":"280","endLine":170,"endColumn":305},{"ruleId":"303","severity":1,"message":"304","line":177,"column":41,"nodeType":"280","endLine":177,"endColumn":305},{"ruleId":"275","severity":1,"message":"276","line":197,"column":127,"nodeType":"268","messageId":"277","endLine":197,"endColumn":128},{"ruleId":"275","severity":1,"message":"276","line":197,"column":189,"nodeType":"268","messageId":"277","endLine":197,"endColumn":190},{"ruleId":"266","severity":1,"message":"267","line":262,"column":59,"nodeType":"268","messageId":"269","endLine":262,"endColumn":61},{"ruleId":"278","severity":1,"message":"279","line":306,"column":29,"nodeType":"280","messageId":"281","endLine":306,"endColumn":74,"fix":"305"},{"ruleId":"278","severity":1,"message":"279","line":12,"column":7,"nodeType":"280","messageId":"281","endLine":12,"endColumn":52,"fix":"306"},"no-unused-vars","'parseToJson' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfileData'. Either include it or remove the dependency array.","ArrayExpression",["307"],["308"],"'Theme1Bg' is defined but never used.","'Theme2Bg' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'bgImgs' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.DirectLink' and 'data.SocialLinks'. Either include them or remove the dependency array.",["309"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"310","text":"311"},["312"],{"range":"313","text":"311"},["314"],{"range":"315","text":"311"},"'Link' is defined but never used.","'navigate' is assigned a value but never used.",["316"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"range":"317","text":"311"},["318"],{"range":"319","text":"311"},["320"],"'getBg' is defined but never used.",{"range":"321","text":"311"},"'AppIconDark' is defined but never used.","'AppIcon' is defined but never used.",["322"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"323","text":"311"},{"range":"324","text":"311"},{"desc":"325","fix":"326"},{"desc":"325","fix":"327"},{"desc":"328","fix":"329"},[12718,12718]," rel=\"noreferrer\"",{"desc":"328","fix":"330"},[7468,7468],{"desc":"328","fix":"331"},[7350,7350],{"desc":"328","fix":"332"},[9641,9641],{"desc":"328","fix":"333"},[6907,6907],{"desc":"328","fix":"334"},[6597,6597],{"desc":"328","fix":"335"},[19928,19928],[330,330],"Update the dependencies array to be: [getProfileData]",{"range":"336","text":"337"},{"range":"338","text":"337"},"Update the dependencies array to be: [data.DirectLink, data.SocialLinks]",{"range":"339","text":"340"},{"range":"341","text":"340"},{"range":"342","text":"340"},{"range":"343","text":"340"},{"range":"344","text":"340"},{"range":"345","text":"340"},{"range":"346","text":"340"},[631,633],"[getProfileData]",[610,612],[1682,1684],"[data.DirectLink, data.SocialLinks]",[1429,1431],[1429,1431],[1216,1218],[903,905],[830,832],[2745,2747]]